{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "contract MockERC6551Account",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract ERC6551Registry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50611ea38061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637b1039991161008c578063b5508aa911610066578063b5508aa91461019f578063ba414fa6146101a7578063e20c9f71146101bf578063fa7626d4146101c757600080fd5b80637b1039991461016f57806385226c8114610182578063916a17c61461019757600080fd5b80633e5e3c23116100c85780633e5e3c231461011f5780633f7286f4146101275780635c60da1b1461012f57806366d9a9a01461015a57600080fd5b80630a9254e4146100ef5780631ed7831c146100f9578063354b273514610117575b600080fd5b6100f76101d4565b005b610101610268565b60405161010e9190610f31565b60405180910390f35b6100f76102ca565b610101610664565b6101016106c4565b601c54610142906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b610162610724565b60405161010e9190610f7e565b601b54610142906001600160a01b031681565b61018a610813565b60405161010e9190611081565b6101626108e3565b61018a6109c9565b6101af610a99565b604051901515815260200161010e565b610101610bc4565b6000546101af9060ff1681565b6040516101e090610f17565b604051809103906000f0801580156101fc573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b039290921691909117905560405161022990610f24565b604051809103906000f080158015610245573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102c057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102a2575b5050505050905090565b6040805160048082526024820183526020820180516001600160e01b0316630337323560e31b179052915163f28dceb360e01b815260649260c89261012c9261019092600092737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb3926103379291016110e3565b600060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b5050601b54601c5460408051600060248083019190915282518083039091018152604490910182526020810180516001600160e01b031663d53a822f60e01b179052905163da7323b360e01b81526001600160a01b03938416955063da7323b394506103df93909216918a918a918a918a916004016110fd565b6020604051808303816000875af11580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610422919061115d565b601b54601c5460408051600160248083019190915282518083039091018152604490910182526020810180516001600160e01b031663d53a822f60e01b179052905163da7323b360e01b81529394506001600160a01b039283169363da7323b39361049a9316918a918a918a918a91906004016110fd565b6020604051808303816000875af11580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd919061115d565b905060008190506000806000836001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611178565b92509250925061055b838a610c24565b6105658289610d17565b61056f8188610c24565b6105da86856001600160a01b031663bfa0b1336040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d591906111ad565b610c24565b6000856001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e919061115d565b601c549091506106589082906001600160a01b0316610d17565b50505050505050505050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102c0576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a2575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102c0576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a2575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561080a5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107f257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107b45790505b50505050508152505081526020019060010190610748565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561080a578382906000526020600020018054610856906111c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610882906111c6565b80156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b505050505081526020019060010190610837565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561080a5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156109b157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116109735790505b50505050508152505081526020019060010190610907565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561080a578382906000526020600020018054610a0c906111c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a38906111c6565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b5050505050815260200190600101906109ed565b60008054610100900460ff1615610ab95750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610bbf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610b47917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611200565b60408051601f1981840301815290829052610b6191611231565b6000604051808303816000865af19150503d8060008114610b9e576040519150601f19603f3d011682016040523d82523d6000602084013e610ba3565b606091505b5091505080806020019051810190610bbb919061124d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102c0576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a2575050505050905090565b808214610d13577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c959060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051610ccc919061126f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051610d0391906112a7565b60405180910390a1610d13610e0b565b5050565b806001600160a01b0316826001600160a01b031614610d13577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610d9d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051610dd491906112d1565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051610d039190611315565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f065760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610ea59291602001611200565b60408051601f1981840301815290829052610ebf91611231565b6000604051808303816000865af19150503d8060008114610efc576040519150601f19603f3d011682016040523d82523d6000602084013e610f01565b606091505b505050505b6000805461ff001916610100179055565b6106378061134083390190565b6104f78061197783390190565b6020808252825182820181905260009190848201906040850190845b81811015610f725783516001600160a01b031683529284019291840191600101610f4d565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561102257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561100d5783516001600160e01b0319168252928b019260019290920191908b0190610fe3565b50978a01979550505091870191600101610fa6565b50919998505050505050505050565b60005b8381101561104c578181015183820152602001611034565b50506000910152565b6000815180845261106d816020860160208601611031565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156110d657603f198886030184526110c4858351611055565b945092850192908501906001016110a8565b5092979650505050505050565b6020815260006110f66020830184611055565b9392505050565b600060018060a01b03808916835287602084015280871660408401525084606083015283608083015260c060a083015261113a60c0830184611055565b98975050505050505050565b80516001600160a01b0381168114610bbf57600080fd5b60006020828403121561116f57600080fd5b6110f682611146565b60008060006060848603121561118d57600080fd5b8351925061119d60208501611146565b9150604084015190509250925092565b6000602082840312156111bf57600080fd5b5051919050565b600181811c908216806111da57607f821691505b6020821081036111fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090611223816004850160208701611031565b919091016004019392505050565b60008251611243818460208701611031565b9190910192915050565b60006020828403121561125f57600080fd5b815180151581146110f657600080fd5b60408152600061129960408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061129960408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006112fb60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006112fb60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b50610617806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063da7323b31461006a575b600080fd5b61004e6100493660046103da565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610428565b6100ac565b60008061008d87878787876101f2565b805160209091012090506100a18382610277565b979650505050505050565b6000806100bc89898989896101f2565b905060006100d48660001b8380519060200120610277565b90506001600160a01b0381163b156100ef5791506100a19050565b6100fb6000878461028b565b90508315610185576000816001600160a01b0316868660405161011f9291906104d9565b6000604051808303816000865af19150503d806000811461015c576040519150601f19603f3d011682016040523d82523d6000602084013e610161565b606091505b505090508061018357604051630337323560e31b815260040160405180910390fd5b505b604080516001600160a01b0383811682528c811660208301528183018c90528a1660608201526080810189905260a0810188905290517f07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f9181900360c00190a19998505050505050505050565b60606040518060e0016040528060ab815260200161053760ab913960408051602081018590529081018790526001600160a01b03808716606083015260808201869052881660a082015260c00160408051601f198184030181529082905261025d9291602001610519565b604051602081830303815290604052905095945050505050565b6000610284838330610394565b9392505050565b6000834710156102e25760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b81516000036103335760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016102d9565b8282516020840186f590506001600160a01b0381166102845760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016102d9565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b80356001600160a01b03811681146103d557600080fd5b919050565b600080600080600060a086880312156103f257600080fd5b6103fb866103be565b945060208601359350610410604087016103be565b94979396509394606081013594506080013592915050565b600080600080600080600060c0888a03121561044357600080fd5b61044c886103be565b965060208801359550610461604089016103be565b9450606088013593506080880135925060a088013567ffffffffffffffff8082111561048c57600080fd5b818a0191508a601f8301126104a057600080fd5b8135818111156104af57600080fd5b8b60208285010111156104c157600080fd5b60208301945080935050505092959891949750929550565b8183823760009101908152919050565b6000815160005b8181101561050a57602081850181015186830152016104f0565b50600093019283525090919050565b600061052e61052883866104e9565b846104e9565b94935050505056fe60208038033d393d517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5560f78060343d393df360003560e01c635c60da1b1461004e57363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545af43d6000803e610049573d6000fd5b3d6000f35b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc543d5260203df3a26469706673582212200aa60a9c6af996d35cad25ee5a1057ba7d0cf9351cddebc27855b63ef74caf6c64736f6c63430008130033608060405234801561001057600080fd5b506104d7806100206000396000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e014610102578063bfa0b13314610126578063d53a822f1461013b578063fc0c546a1461015d57600080fd5b806301ffc9a7146100805780638da5cb5b146100b55780639e5d4c49146100e257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b3660046102eb565b610195565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100ca6101bc565b6040516001600160a01b0390911681526020016100ac565b6100f56100f0366004610334565b6101df565b6040516100ac91906103bd565b34801561010e57600080fd5b5061011860005481565b6040519081526020016100ac565b34801561013257600080fd5b506101186101f9565b34801561014757600080fd5b5061015b61015636600461040b565b610208565b005b34801561016957600080fd5b50610172610238565b604080519384526001600160a01b039092166020840152908201526060016100ac565b60006001600160e01b031980831690036101b157506000919050565b505060015460ff1690565b600060405162461bcd60e51b81526004016101d69061042d565b60405180910390fd5b606060405162461bcd60e51b81526004016101d69061042d565b6000610203610250565b905090565b806102255760405162461bcd60e51b81526004016101d69061042d565b6001805460ff1916911515919091179055565b6000806000610245610298565b925092509250909192565b6040805160208082528183019092526000918291906020820181803683370190505090506097607760208301303c80806020019051810190610292919061044f565b91505090565b604080516060808252608082019092526000918291829182919060208201818036833701905050905060f7609760208301303c808060200190518101906102df9190610468565b93509350935050909192565b6000602082840312156102fd57600080fd5b81356001600160e01b03198116811461031557600080fd5b9392505050565b6001600160a01b038116811461033157600080fd5b50565b6000806000806060858703121561034a57600080fd5b84356103558161031c565b935060208501359250604085013567ffffffffffffffff8082111561037957600080fd5b818701915087601f83011261038d57600080fd5b81358181111561039c57600080fd5b8860208285010111156103ae57600080fd5b95989497505060200194505050565b600060208083528351808285015260005b818110156103ea578581018301518582016040015282016103ce565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561041d57600080fd5b8135801515811461031557600080fd5b602080825260089082015267191a5cd8589b195960c21b604082015260600190565b60006020828403121561046157600080fd5b5051919050565b60008060006060848603121561047d57600080fd5b83519250602084015161048f8161031c565b8092505060408401519050925092509256fea264697066735822122062760d9809ee85f508a2d8d66bde814849a3d16bc799202388608b8655c213f364736f6c63430008130033a2646970667358221220a17b18acd00554da2700ed4d5c602c6c05163868ec58085f8990acc618515c9464736f6c63430008130033",
    "sourceMap": "207:1670:37:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3161:44:3;;;;;;;;;;;207:1670:37;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637b1039991161008c578063b5508aa911610066578063b5508aa91461019f578063ba414fa6146101a7578063e20c9f71146101bf578063fa7626d4146101c757600080fd5b80637b1039991461016f57806385226c8114610182578063916a17c61461019757600080fd5b80633e5e3c23116100c85780633e5e3c231461011f5780633f7286f4146101275780635c60da1b1461012f57806366d9a9a01461015a57600080fd5b80630a9254e4146100ef5780631ed7831c146100f9578063354b273514610117575b600080fd5b6100f76101d4565b005b610101610268565b60405161010e9190610f31565b60405180910390f35b6100f76102ca565b610101610664565b6101016106c4565b601c54610142906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b610162610724565b60405161010e9190610f7e565b601b54610142906001600160a01b031681565b61018a610813565b60405161010e9190611081565b6101626108e3565b61018a6109c9565b6101af610a99565b604051901515815260200161010e565b610101610bc4565b6000546101af9060ff1681565b6040516101e090610f17565b604051809103906000f0801580156101fc573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b039290921691909117905560405161022990610f24565b604051809103906000f080158015610245573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102c057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102a2575b5050505050905090565b6040805160048082526024820183526020820180516001600160e01b0316630337323560e31b179052915163f28dceb360e01b815260649260c89261012c9261019092600092737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb3926103379291016110e3565b600060405180830381600087803b15801561035157600080fd5b505af1158015610365573d6000803e3d6000fd5b5050601b54601c5460408051600060248083019190915282518083039091018152604490910182526020810180516001600160e01b031663d53a822f60e01b179052905163da7323b360e01b81526001600160a01b03938416955063da7323b394506103df93909216918a918a918a918a916004016110fd565b6020604051808303816000875af11580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610422919061115d565b601b54601c5460408051600160248083019190915282518083039091018152604490910182526020810180516001600160e01b031663d53a822f60e01b179052905163da7323b360e01b81529394506001600160a01b039283169363da7323b39361049a9316918a918a918a918a91906004016110fd565b6020604051808303816000875af11580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd919061115d565b905060008190506000806000836001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611178565b92509250925061055b838a610c24565b6105658289610d17565b61056f8188610c24565b6105da86856001600160a01b031663bfa0b1336040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d591906111ad565b610c24565b6000856001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063e919061115d565b601c549091506106589082906001600160a01b0316610d17565b50505050505050505050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102c0576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a2575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102c0576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a2575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561080a5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107f257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107b45790505b50505050508152505081526020019060010190610748565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561080a578382906000526020600020018054610856906111c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610882906111c6565b80156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b505050505081526020019060010190610837565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561080a5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156109b157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116109735790505b50505050508152505081526020019060010190610907565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561080a578382906000526020600020018054610a0c906111c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a38906111c6565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b5050505050815260200190600101906109ed565b60008054610100900460ff1615610ab95750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610bbf5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610b47917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611200565b60408051601f1981840301815290829052610b6191611231565b6000604051808303816000865af19150503d8060008114610b9e576040519150601f19603f3d011682016040523d82523d6000602084013e610ba3565b606091505b5091505080806020019051810190610bbb919061124d565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102c0576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102a2575050505050905090565b808214610d13577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610c959060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a882604051610ccc919061126f565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051610d0391906112a7565b60405180910390a1610d13610e0b565b5050565b806001600160a01b0316826001600160a01b031614610d13577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610d9d9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f82604051610dd491906112d1565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051610d039190611315565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610f065760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610ea59291602001611200565b60408051601f1981840301815290829052610ebf91611231565b6000604051808303816000865af19150503d8060008114610efc576040519150601f19603f3d011682016040523d82523d6000602084013e610f01565b606091505b505050505b6000805461ff001916610100179055565b6106378061134083390190565b6104f78061197783390190565b6020808252825182820181905260009190848201906040850190845b81811015610f725783516001600160a01b031683529284019291840191600101610f4d565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561102257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561100d5783516001600160e01b0319168252928b019260019290920191908b0190610fe3565b50978a01979550505091870191600101610fa6565b50919998505050505050505050565b60005b8381101561104c578181015183820152602001611034565b50506000910152565b6000815180845261106d816020860160208601611031565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156110d657603f198886030184526110c4858351611055565b945092850192908501906001016110a8565b5092979650505050505050565b6020815260006110f66020830184611055565b9392505050565b600060018060a01b03808916835287602084015280871660408401525084606083015283608083015260c060a083015261113a60c0830184611055565b98975050505050505050565b80516001600160a01b0381168114610bbf57600080fd5b60006020828403121561116f57600080fd5b6110f682611146565b60008060006060848603121561118d57600080fd5b8351925061119d60208501611146565b9150604084015190509250925092565b6000602082840312156111bf57600080fd5b5051919050565b600181811c908216806111da57607f821691505b6020821081036111fa57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090611223816004850160208701611031565b919091016004019392505050565b60008251611243818460208701611031565b9190910192915050565b60006020828403121561125f57600080fd5b815180151581146110f657600080fd5b60408152600061129960408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b60408152600061129960408301600a8152690808080808149a59da1d60b21b602082015260400190565b6040815260006112fb60408301600a8152690808080808081319599d60b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006112fb60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe608060405234801561001057600080fd5b50610617806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063da7323b31461006a575b600080fd5b61004e6100493660046103da565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610428565b6100ac565b60008061008d87878787876101f2565b805160209091012090506100a18382610277565b979650505050505050565b6000806100bc89898989896101f2565b905060006100d48660001b8380519060200120610277565b90506001600160a01b0381163b156100ef5791506100a19050565b6100fb6000878461028b565b90508315610185576000816001600160a01b0316868660405161011f9291906104d9565b6000604051808303816000865af19150503d806000811461015c576040519150601f19603f3d011682016040523d82523d6000602084013e610161565b606091505b505090508061018357604051630337323560e31b815260040160405180910390fd5b505b604080516001600160a01b0383811682528c811660208301528183018c90528a1660608201526080810189905260a0810188905290517f07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f9181900360c00190a19998505050505050505050565b60606040518060e0016040528060ab815260200161053760ab913960408051602081018590529081018790526001600160a01b03808716606083015260808201869052881660a082015260c00160408051601f198184030181529082905261025d9291602001610519565b604051602081830303815290604052905095945050505050565b6000610284838330610394565b9392505050565b6000834710156102e25760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b81516000036103335760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f60448201526064016102d9565b8282516020840186f590506001600160a01b0381166102845760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f790000000000000060448201526064016102d9565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b80356001600160a01b03811681146103d557600080fd5b919050565b600080600080600060a086880312156103f257600080fd5b6103fb866103be565b945060208601359350610410604087016103be565b94979396509394606081013594506080013592915050565b600080600080600080600060c0888a03121561044357600080fd5b61044c886103be565b965060208801359550610461604089016103be565b9450606088013593506080880135925060a088013567ffffffffffffffff8082111561048c57600080fd5b818a0191508a601f8301126104a057600080fd5b8135818111156104af57600080fd5b8b60208285010111156104c157600080fd5b60208301945080935050505092959891949750929550565b8183823760009101908152919050565b6000815160005b8181101561050a57602081850181015186830152016104f0565b50600093019283525090919050565b600061052e61052883866104e9565b846104e9565b94935050505056fe60208038033d393d517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5560f78060343d393df360003560e01c635c60da1b1461004e57363d3d373d3d363d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545af43d6000803e610049573d6000fd5b3d6000f35b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc543d5260203df3a26469706673582212200aa60a9c6af996d35cad25ee5a1057ba7d0cf9351cddebc27855b63ef74caf6c64736f6c63430008130033608060405234801561001057600080fd5b506104d7806100206000396000f3fe6080604052600436106100745760003560e01c8063affed0e01161004e578063affed0e014610102578063bfa0b13314610126578063d53a822f1461013b578063fc0c546a1461015d57600080fd5b806301ffc9a7146100805780638da5cb5b146100b55780639e5d4c49146100e257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b3660046102eb565b610195565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100ca6101bc565b6040516001600160a01b0390911681526020016100ac565b6100f56100f0366004610334565b6101df565b6040516100ac91906103bd565b34801561010e57600080fd5b5061011860005481565b6040519081526020016100ac565b34801561013257600080fd5b506101186101f9565b34801561014757600080fd5b5061015b61015636600461040b565b610208565b005b34801561016957600080fd5b50610172610238565b604080519384526001600160a01b039092166020840152908201526060016100ac565b60006001600160e01b031980831690036101b157506000919050565b505060015460ff1690565b600060405162461bcd60e51b81526004016101d69061042d565b60405180910390fd5b606060405162461bcd60e51b81526004016101d69061042d565b6000610203610250565b905090565b806102255760405162461bcd60e51b81526004016101d69061042d565b6001805460ff1916911515919091179055565b6000806000610245610298565b925092509250909192565b6040805160208082528183019092526000918291906020820181803683370190505090506097607760208301303c80806020019051810190610292919061044f565b91505090565b604080516060808252608082019092526000918291829182919060208201818036833701905050905060f7609760208301303c808060200190518101906102df9190610468565b93509350935050909192565b6000602082840312156102fd57600080fd5b81356001600160e01b03198116811461031557600080fd5b9392505050565b6001600160a01b038116811461033157600080fd5b50565b6000806000806060858703121561034a57600080fd5b84356103558161031c565b935060208501359250604085013567ffffffffffffffff8082111561037957600080fd5b818701915087601f83011261038d57600080fd5b81358181111561039c57600080fd5b8860208285010111156103ae57600080fd5b95989497505060200194505050565b600060208083528351808285015260005b818110156103ea578581018301518582016040015282016103ce565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561041d57600080fd5b8135801515811461031557600080fd5b602080825260089082015267191a5cd8589b195960c21b604082015260600190565b60006020828403121561046157600080fd5b5051919050565b60008060006060848603121561047d57600080fd5b83519250602084015161048f8161031c565b8092505060408401519050925092509256fea264697066735822122062760d9809ee85f508a2d8d66bde814849a3d16bc799202388608b8655c213f364736f6c63430008130033a2646970667358221220a17b18acd00554da2700ed4d5c602c6c05163868ec58085f8990acc618515c9464736f6c63430008130033",
    "sourceMap": "207:1670:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:124;;;:::i;:::-;;2161:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;457:1418:37;;;:::i;2930:133:6:-;;;:::i;2631:141::-;;;:::i;280:40:37:-;;;;;-1:-1:-1;;;;;280:40:37;;;;;;-1:-1:-1;;;;;877:32:41;;;859:51;;847:2;832:18;280:40:37;677:239:41;2447:178:6;;;:::i;:::-;;;;;;;:::i;243:31:37:-;;;;;-1:-1:-1;;;;;243:31:37;;;2301:140:6;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;4230:14:41;;4223:22;4205:41;;4193:2;4178:18;1819:584:0;4065:187:41;2013:142:6;;;:::i;1572:26:0:-;;;;;;;;;327:124:37;372:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;361:8:37;:32;;-1:-1:-1;;;;;;361:32:37;-1:-1:-1;;;;;361:32:37;;;;;;;;;;420:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;403:14:37;:41;;-1:-1:-1;;;;;;403:41:37;-1:-1:-1;;;;;403:41:37;;;;;;;;;;327:124::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;457:1418:37:-;694:67;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;694:67:37;-1:-1:-1;;;694:67:37;;;665:106;;-1:-1:-1;;;665:106:37;;514:3;;558;;590;;618;;496:15;;665;;;;:106;;694:67;665:106;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;799:8:37;;843:14;;958:50;;;799:8;958:50;;;;4205:41:41;;;;958:50:37;;;;;;;;;;4178:18:41;;;;958:50:37;;;;;;;-1:-1:-1;;;;;958:50:37;-1:-1:-1;;;958:50:37;;;799:219;;-1:-1:-1;;;799:219:37;;-1:-1:-1;;;;;799:8:37;;;;-1:-1:-1;799:22:37;;-1:-1:-1;799:219:37;;843:14;;;;872:7;;893:12;;919:7;;940:4;;799:219;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1047:8;;1091:14;;1206:49;;;1047:8;1206:49;;;;4205:41:41;;;;1206:49:37;;;;;;;;;;4178:18:41;;;;1206:49:37;;;;;;;-1:-1:-1;;;;;1206:49:37;-1:-1:-1;;;1206:49:37;;;1047:218;;-1:-1:-1;;;1047:218:37;;781:237;;-1:-1:-1;;;;;;1047:8:37;;;;:22;;:218;;1091:14;;1120:7;;1141:12;;1167:7;;1188:4;;1206:49;1047:218;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1029:236;;1276:34;1353:15;1276:103;;1404:16;1434:21;1469:16;1498:15;-1:-1:-1;;;;;1498:21:37;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:131;;;;;;1531:27;1540:8;1550:7;1531:8;:27::i;:::-;1568:37;1577:13;1592:12;1568:8;:37::i;:::-;1615:27;1624:8;1634:7;1615:8;:27::i;:::-;1653:38;1662:4;1668:15;-1:-1:-1;;;;;1668:20:37;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1653:8;:38::i;:::-;1702:29;1755:15;-1:-1:-1;;;;;1734:65:37;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1852:14;;1702:99;;-1:-1:-1;1812:56:37;;1702:99;;-1:-1:-1;;;;;1852:14:37;1812:8;:56::i;:::-;486:1389;;;;;;;;;;457:1418::o;2930:133:6:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6596:51:41;;;-1:-1:-1;;;6663:18:41;;;6656:34;2196:43:0;;;;;;;;;6569:18:41;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2013:142:6:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5209:262:0:-;5271:1;5266;:6;5262:203;;5293:41;;;;;7866:2:41;7848:21;;;7905:2;7885:18;;;7878:30;7944:34;7939:2;7924:18;;7917:62;-1:-1:-1;;;8010:2:41;7995:18;;7988:32;8052:3;8037:19;;7664:398;5293:41:0;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:0;:1;-1:-1:-1;;;;;3685:6:0;;3681:212;;3712:44;;;;;9303:2:41;9285:21;;;9342:2;9322:18;;;9315:30;9381:34;9376:2;9361:18;;9354:62;-1:-1:-1;;;9447:2:41;9432:18;;9425:35;9492:3;9477:19;;9101:401;3712:44:0;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;10467:51:41;;;-1:-1:-1;;;10534:18:41;;;10527:34;;;;2712:4:0;10577:18:41;;;10570:34;2489:11:0;;1671:64;2586:43;;10440:18:41;;2652:67:0;;;-1:-1:-1;;2652:67:0;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:0;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:0;2820:7;:14;;-1:-1:-1;;2820:14:0;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:41:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:41;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:41;;14:658;-1:-1:-1;;;;;;14:658:41:o;921:1567::-;1123:4;1152:2;1192;1181:9;1177:18;1222:2;1211:9;1204:21;1245:6;1280;1274:13;1311:6;1303;1296:22;1337:2;1327:12;;1370:2;1359:9;1355:18;1348:25;;1432:2;1422:6;1419:1;1415:14;1404:9;1400:30;1396:39;1470:2;1462:6;1458:15;1491:1;1512;1522:937;1538:6;1533:3;1530:15;1522:937;;;1607:22;;;-1:-1:-1;;1603:36:41;1591:49;;1663:13;;1750:9;;-1:-1:-1;;;;;1746:35:41;1731:51;;1821:11;;1815:18;1853:15;;;1846:27;;;1934:19;;1703:15;;;1966:24;;;2056:21;;;;2101:1;;2024:2;2012:15;;;2115:236;2131:8;2126:3;2123:17;2115:236;;;2212:15;;-1:-1:-1;;;;;;2208:42:41;2194:57;;2320:17;;;;2159:1;2150:11;;;;;2277:14;;;;2115:236;;;-1:-1:-1;2437:12:41;;;;2374:5;-1:-1:-1;;;2402:15:41;;;;1564:1;1555:11;1522:937;;;-1:-1:-1;2476:6:41;;921:1567;-1:-1:-1;;;;;;;;;921:1567:41:o;2726:250::-;2811:1;2821:113;2835:6;2832:1;2829:13;2821:113;;;2911:11;;;2905:18;2892:11;;;2885:39;2857:2;2850:10;2821:113;;;-1:-1:-1;;2968:1:41;2950:16;;2943:27;2726:250::o;2981:271::-;3023:3;3061:5;3055:12;3088:6;3083:3;3076:19;3104:76;3173:6;3166:4;3161:3;3157:14;3150:4;3143:5;3139:16;3104:76;:::i;:::-;3234:2;3213:15;-1:-1:-1;;3209:29:41;3200:39;;;;3241:4;3196:50;;2981:271;-1:-1:-1;;2981:271:41:o;3257:803::-;3419:4;3448:2;3488;3477:9;3473:18;3518:2;3507:9;3500:21;3541:6;3576;3570:13;3607:6;3599;3592:22;3645:2;3634:9;3630:18;3623:25;;3707:2;3697:6;3694:1;3690:14;3679:9;3675:30;3671:39;3657:53;;3745:2;3737:6;3733:15;3766:1;3776:255;3790:6;3787:1;3784:13;3776:255;;;3883:2;3879:7;3867:9;3859:6;3855:22;3851:36;3846:3;3839:49;3911:40;3944:6;3935;3929:13;3911:40;:::i;:::-;3901:50;-1:-1:-1;4009:12:41;;;;3974:15;;;;3812:1;3805:9;3776:255;;;-1:-1:-1;4048:6:41;;3257:803;-1:-1:-1;;;;;;;3257:803:41:o;4257:218::-;4404:2;4393:9;4386:21;4367:4;4424:45;4465:2;4454:9;4450:18;4442:6;4424:45;:::i;:::-;4416:53;4257:218;-1:-1:-1;;;4257:218:41:o;4480:633::-;4730:4;4776:1;4772;4767:3;4763:11;4759:19;4817:2;4809:6;4805:15;4794:9;4787:34;4857:6;4852:2;4841:9;4837:18;4830:34;4912:2;4904:6;4900:15;4895:2;4884:9;4880:18;4873:43;;4952:6;4947:2;4936:9;4932:18;4925:34;4996:6;4990:3;4979:9;4975:19;4968:35;5040:3;5034;5023:9;5019:19;5012:32;5061:46;5102:3;5091:9;5087:19;5079:6;5061:46;:::i;:::-;5053:54;4480:633;-1:-1:-1;;;;;;;;4480:633:41:o;5118:177::-;5197:13;;-1:-1:-1;;;;;5239:31:41;;5229:42;;5219:70;;5285:1;5282;5275:12;5300:208;5370:6;5423:2;5411:9;5402:7;5398:23;5394:32;5391:52;;;5439:1;5436;5429:12;5391:52;5462:40;5492:9;5462:40;:::i;5513:330::-;5601:6;5609;5617;5670:2;5658:9;5649:7;5645:23;5641:32;5638:52;;;5686:1;5683;5676:12;5638:52;5715:9;5709:16;5699:26;;5744:49;5789:2;5778:9;5774:18;5744:49;:::i;:::-;5734:59;;5833:2;5822:9;5818:18;5812:25;5802:35;;5513:330;;;;;:::o;5848:184::-;5918:6;5971:2;5959:9;5950:7;5946:23;5942:32;5939:52;;;5987:1;5984;5977:12;5939:52;-1:-1:-1;6010:16:41;;5848:184;-1:-1:-1;5848:184:41:o;6037:380::-;6116:1;6112:12;;;;6159;;;6180:61;;6234:4;6226:6;6222:17;6212:27;;6180:61;6287:2;6279:6;6276:14;6256:18;6253:38;6250:161;;6333:10;6328:3;6324:20;6321:1;6314:31;6368:4;6365:1;6358:15;6396:4;6393:1;6386:15;6250:161;;6037:380;;;:::o;6701:384::-;-1:-1:-1;;;;;;6886:33:41;;6874:46;;6943:13;;6856:3;;6965:74;6943:13;7028:1;7019:11;;7012:4;7000:17;;6965:74;:::i;:::-;7059:16;;;;7077:1;7055:24;;6701:384;-1:-1:-1;;;6701:384:41:o;7090:287::-;7219:3;7257:6;7251:13;7273:66;7332:6;7327:3;7320:4;7312:6;7308:17;7273:66;:::i;:::-;7355:16;;;;;7090:287;-1:-1:-1;;7090:287:41:o;7382:277::-;7449:6;7502:2;7490:9;7481:7;7477:23;7473:32;7470:52;;;7518:1;7515;7508:12;7470:52;7550:9;7544:16;7603:5;7596:13;7589:21;7582:5;7579:32;7569:60;;7625:1;7622;7615:12;8231:348;8461:2;8450:9;8443:21;8424:4;8481:49;8526:2;8515:9;8511:18;8144:2;8132:15;;-1:-1:-1;;;8172:4:41;8163:14;;8156:36;8217:2;8208:12;;8067:159;8481:49;8473:57;;8566:6;8561:2;8550:9;8546:18;8539:34;8231:348;;;;:::o;8748:::-;8978:2;8967:9;8960:21;8941:4;8998:49;9043:2;9032:9;9028:18;8661:2;8649:15;;-1:-1:-1;;;8689:4:41;8680:14;;8673:36;8734:2;8725:12;;8584:159;9507:374;9737:2;9726:9;9719:21;9700:4;9757:49;9802:2;9791:9;9787:18;8144:2;8132:15;;-1:-1:-1;;;8172:4:41;8163:14;;8156:36;8217:2;8208:12;;8067:159;9757:49;-1:-1:-1;;;;;9842:32:41;;;;9837:2;9822:18;;;;9815:60;;;;-1:-1:-1;9749:57:41;9507:374::o;9886:::-;10116:2;10105:9;10098:21;10079:4;10136:49;10181:2;10170:9;10166:18;8661:2;8649:15;;-1:-1:-1;;;8689:4:41;8680:14;;8673:36;8734:2;8725:12;;8584:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "implementation()": "5c60da1b",
    "registry()": "7b103999",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testDeploy()": "354b2735"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"contract MockERC6551Account\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract ERC6551Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDeploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ERC6551Registry.sol\":\"RegistryTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":sstore2/=lib/sstore2/contracts/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd3878c6e8583666a75fadf66cc77c2579bb6c103909b16d7c4fbf840b81a671d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ba027db007ee25a551a3785eda12f5c6e06827290033e9ebf6658fb4d7d1b55\",\"dweb:/ipfs/QmaRuLr499b8JX9XEYbYLsHATVz2XfZat95qdYUgPcs8Lt\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x609394b09bc0e0f4a3fb946c769dc75b4d4154b367503190ebd1e3ca12c23ca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a57dfea18ea68df6f48cca1ed1c030541a5d0cf1c115725da8ae7c2ad6f41f1\",\"dweb:/ipfs/QmZ5owm2HG4jjTzkimL9zHZHSTHT5o81L3mPA24391PtmT\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf\",\"dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0x72b3ff04f1d11ae3667edaead69cc3a8ce6ae255c2fa222024dec39e4731ae69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7539e4b1615b7171c7354d2c592ade73e29f17d52de12439fb6ecd7d7fc8e5d1\",\"dweb:/ipfs/Qmd4YQpXcxBA3WuDZR9UWPT1HAZZMFRVymH2yKS6y2LSn8\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/ERC6551Registry.sol\":{\"keccak256\":\"0xd9e46ac3e771b4dc742261a7cfc0aa6499d141882e0e2139c1847e82d35883fd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77330056234e3b6f56969e4b2bff111fc6f802c3b4fa9c2d87156ab05a8d841f\",\"dweb:/ipfs/QmSBjDUZskeMJgfmskwrcZeEbfZt93QGjJhfoGrH2diZS7\"]},\"src/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x8a70d4089cdb602125664ecc44bf03fde49257d3eac53b53ad5701d40000b7de\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e65980f64657fd9e1143ca0d6b4737f4df1ddac30815dfa5ea1600a0f7b50fd4\",\"dweb:/ipfs/QmeobrVroAmvHQoRLyHLf7U5kQF234Qq8L5n79n4mqWg2Y\"]},\"src/interfaces/IERC6551Registry.sol\":{\"keccak256\":\"0xe280e76525772dd484d68ef254fcf542791ac54f6e3a47249ba13b5f2069f877\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a49b50e50f589a512bb31df1a51f39e255f9db3063ed3d63f86b6cc68936df11\",\"dweb:/ipfs/QmVEa4SqgekVbN1s7i1DTZrk4hWoQKdLc8n2p8cXBSG6rj\"]},\"src/lib/ERC6551AccountBytecode.sol\":{\"keccak256\":\"0x0f00434d6f8651be3f6ddf49210809fde5ba31eb99b290bc6d28d163acd6dee8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9461d671836545601d2eed3c3a2c11a6bbe7b4b329862518a128428caadcb2a2\",\"dweb:/ipfs/QmcvjXigtc2noTXUjT4jTxdvj1RHLUGHabSnpZiQi7Ky6p\"]},\"test/ERC6551Registry.sol\":{\"keccak256\":\"0xb6d493bbe0432f7b2de38d549780422fa13edbfe1d64b120b7394b21def3596f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://05adc2bbd80a70625d0b137e430c39db11deaae0e904bf0f26d4351d5b3e1d18\",\"dweb:/ipfs/QmQhohFm9AJnaf6kg1cGfektD4rxpcVfzTSQuNvAooptNA\"]},\"test/mocks/MockERC6551Account.sol\":{\"keccak256\":\"0xf791a490ed2f8e2dd02cecae3bf3fb7e323617d3b3ba46d9483002ff5c882dc2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1cf85d36a5ea0b3e53c733f16e0059dc3f8d14e4c831d995870ccbd583a743f8\",\"dweb:/ipfs/QmVE6wZeVw14gQHvseGXdCnhs13YY9rLhrxzp5WDCphY9o\"]},\"test/mocks/MockERC721.sol\":{\"keccak256\":\"0xf85b8cbd1993111a824aaa8017339606b124288c202623937ca4d8a2a836db92\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fb368db5bf9ad94b8f5d8b7e9324185b9eff2fd9b9e8b23bab91f0fb2e14d7e5\",\"dweb:/ipfs/QmVyMy6UBduZzWKPuFwFrixNYukWKY5gfMyQKXeXvPeySB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "contract MockERC6551Account",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registry",
          "outputs": [
            {
              "internalType": "contract ERC6551Registry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeploy"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":sstore2/=lib/sstore2/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ERC6551Registry.sol": "RegistryTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd3878c6e8583666a75fadf66cc77c2579bb6c103909b16d7c4fbf840b81a671d",
        "urls": [
          "bzz-raw://6ba027db007ee25a551a3785eda12f5c6e06827290033e9ebf6658fb4d7d1b55",
          "dweb:/ipfs/QmaRuLr499b8JX9XEYbYLsHATVz2XfZat95qdYUgPcs8Lt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x609394b09bc0e0f4a3fb946c769dc75b4d4154b367503190ebd1e3ca12c23ca8",
        "urls": [
          "bzz-raw://5a57dfea18ea68df6f48cca1ed1c030541a5d0cf1c115725da8ae7c2ad6f41f1",
          "dweb:/ipfs/QmZ5owm2HG4jjTzkimL9zHZHSTHT5o81L3mPA24391PtmT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xe986ce7671ef4d92b15c9787b48f6cd6688913e8bf595ebc9c094efd8594b7c4",
        "urls": [
          "bzz-raw://490a886c899c11eae93a3d45cfc071058d7009885b645ff552c302aed0b4abbf",
          "dweb:/ipfs/Qma5gTgcbZ4BJjJMWPFDw5c7a6BDDJhUgMF2ShHazNeP2f"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0x72b3ff04f1d11ae3667edaead69cc3a8ce6ae255c2fa222024dec39e4731ae69",
        "urls": [
          "bzz-raw://7539e4b1615b7171c7354d2c592ade73e29f17d52de12439fb6ecd7d7fc8e5d1",
          "dweb:/ipfs/Qmd4YQpXcxBA3WuDZR9UWPT1HAZZMFRVymH2yKS6y2LSn8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/ERC6551Registry.sol": {
        "keccak256": "0xd9e46ac3e771b4dc742261a7cfc0aa6499d141882e0e2139c1847e82d35883fd",
        "urls": [
          "bzz-raw://77330056234e3b6f56969e4b2bff111fc6f802c3b4fa9c2d87156ab05a8d841f",
          "dweb:/ipfs/QmSBjDUZskeMJgfmskwrcZeEbfZt93QGjJhfoGrH2diZS7"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IERC6551Account.sol": {
        "keccak256": "0x8a70d4089cdb602125664ecc44bf03fde49257d3eac53b53ad5701d40000b7de",
        "urls": [
          "bzz-raw://e65980f64657fd9e1143ca0d6b4737f4df1ddac30815dfa5ea1600a0f7b50fd4",
          "dweb:/ipfs/QmeobrVroAmvHQoRLyHLf7U5kQF234Qq8L5n79n4mqWg2Y"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IERC6551Registry.sol": {
        "keccak256": "0xe280e76525772dd484d68ef254fcf542791ac54f6e3a47249ba13b5f2069f877",
        "urls": [
          "bzz-raw://a49b50e50f589a512bb31df1a51f39e255f9db3063ed3d63f86b6cc68936df11",
          "dweb:/ipfs/QmVEa4SqgekVbN1s7i1DTZrk4hWoQKdLc8n2p8cXBSG6rj"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/ERC6551AccountBytecode.sol": {
        "keccak256": "0x0f00434d6f8651be3f6ddf49210809fde5ba31eb99b290bc6d28d163acd6dee8",
        "urls": [
          "bzz-raw://9461d671836545601d2eed3c3a2c11a6bbe7b4b329862518a128428caadcb2a2",
          "dweb:/ipfs/QmcvjXigtc2noTXUjT4jTxdvj1RHLUGHabSnpZiQi7Ky6p"
        ],
        "license": "MIT"
      },
      "test/ERC6551Registry.sol": {
        "keccak256": "0xb6d493bbe0432f7b2de38d549780422fa13edbfe1d64b120b7394b21def3596f",
        "urls": [
          "bzz-raw://05adc2bbd80a70625d0b137e430c39db11deaae0e904bf0f26d4351d5b3e1d18",
          "dweb:/ipfs/QmQhohFm9AJnaf6kg1cGfektD4rxpcVfzTSQuNvAooptNA"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/MockERC6551Account.sol": {
        "keccak256": "0xf791a490ed2f8e2dd02cecae3bf3fb7e323617d3b3ba46d9483002ff5c882dc2",
        "urls": [
          "bzz-raw://1cf85d36a5ea0b3e53c733f16e0059dc3f8d14e4c831d995870ccbd583a743f8",
          "dweb:/ipfs/QmVE6wZeVw14gQHvseGXdCnhs13YY9rLhrxzp5WDCphY9o"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/MockERC721.sol": {
        "keccak256": "0xf85b8cbd1993111a824aaa8017339606b124288c202623937ca4d8a2a836db92",
        "urls": [
          "bzz-raw://fb368db5bf9ad94b8f5d8b7e9324185b9eff2fd9b9e8b23bab91f0fb2e14d7e5",
          "dweb:/ipfs/QmVyMy6UBduZzWKPuFwFrixNYukWKY5gfMyQKXeXvPeySB"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ERC6551Registry.sol",
    "id": 33649,
    "exportedSymbols": {
      "Address": [
        31812
      ],
      "Context": [
        31834
      ],
      "Create2": [
        31915
      ],
      "DSTest": [
        2291
      ],
      "ERC165": [
        32168
      ],
      "ERC6551AccountBytecode": [
        33479
      ],
      "ERC6551Registry": [
        33292
      ],
      "ERC721": [
        31321
      ],
      "IERC165": [
        32180
      ],
      "IERC6551Account": [
        33343
      ],
      "IERC6551AccountProxy": [
        33300
      ],
      "IERC6551Registry": [
        33392
      ],
      "IERC721": [
        31437
      ],
      "IERC721Metadata": [
        31482
      ],
      "IERC721Receiver": [
        31455
      ],
      "Math": [
        33046
      ],
      "MockERC6551Account": [
        33780
      ],
      "MockERC721": [
        33807
      ],
      "RegistryTest": [
        33648
      ],
      "SignedMath": [
        33151
      ],
      "StdAssertions": [
        3781
      ],
      "StdChains": [
        4475
      ],
      "StdCheats": [
        6751
      ],
      "StdInvariant": [
        7041
      ],
      "StdStorage": [
        7791
      ],
      "StdStyle": [
        10435
      ],
      "StdUtils": [
        11262
      ],
      "Strings": [
        32144
      ],
      "Test": [
        11311
      ],
      "TestBase": [
        2351
      ],
      "Vm": [
        12670
      ],
      "console": [
        20734
      ],
      "console2": [
        28830
      ],
      "stdError": [
        6817
      ],
      "stdJson": [
        7617
      ],
      "stdMath": [
        7759
      ],
      "stdStorage": [
        9224
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1838:37",
    "nodes": [
      {
        "id": 33481,
        "nodeType": "PragmaDirective",
        "src": "39:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 33482,
        "nodeType": "ImportDirective",
        "src": "65:28:37",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33649,
        "sourceUnit": 11312,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33483,
        "nodeType": "ImportDirective",
        "src": "95:36:37",
        "nodes": [],
        "absolutePath": "src/ERC6551Registry.sol",
        "file": "../src/ERC6551Registry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33649,
        "sourceUnit": 33293,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33484,
        "nodeType": "ImportDirective",
        "src": "132:32:37",
        "nodes": [],
        "absolutePath": "test/mocks/MockERC721.sol",
        "file": "./mocks/MockERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33649,
        "sourceUnit": 33808,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33485,
        "nodeType": "ImportDirective",
        "src": "165:40:37",
        "nodes": [],
        "absolutePath": "test/mocks/MockERC6551Account.sol",
        "file": "./mocks/MockERC6551Account.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33649,
        "sourceUnit": 33781,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33648,
        "nodeType": "ContractDefinition",
        "src": "207:1670:37",
        "nodes": [
          {
            "id": 33490,
            "nodeType": "VariableDeclaration",
            "src": "243:31:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "7b103999",
            "mutability": "mutable",
            "name": "registry",
            "nameLocation": "266:8:37",
            "scope": 33648,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
              "typeString": "contract ERC6551Registry"
            },
            "typeName": {
              "id": 33489,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33488,
                "name": "ERC6551Registry",
                "nameLocations": [
                  "243:15:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33292,
                "src": "243:15:37"
              },
              "referencedDeclaration": 33292,
              "src": "243:15:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                "typeString": "contract ERC6551Registry"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33493,
            "nodeType": "VariableDeclaration",
            "src": "280:40:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "5c60da1b",
            "mutability": "mutable",
            "name": "implementation",
            "nameLocation": "306:14:37",
            "scope": 33648,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
              "typeString": "contract MockERC6551Account"
            },
            "typeName": {
              "id": 33492,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33491,
                "name": "MockERC6551Account",
                "nameLocations": [
                  "280:18:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33780,
                "src": "280:18:37"
              },
              "referencedDeclaration": 33780,
              "src": "280:18:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                "typeString": "contract MockERC6551Account"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33511,
            "nodeType": "FunctionDefinition",
            "src": "327:124:37",
            "nodes": [],
            "body": {
              "id": 33510,
              "nodeType": "Block",
              "src": "351:100:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33496,
                      "name": "registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33490,
                      "src": "361:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                        "typeString": "contract ERC6551Registry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "372:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ERC6551Registry_$33292_$",
                          "typeString": "function () returns (contract ERC6551Registry)"
                        },
                        "typeName": {
                          "id": 33498,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33497,
                            "name": "ERC6551Registry",
                            "nameLocations": [
                              "376:15:37"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33292,
                            "src": "376:15:37"
                          },
                          "referencedDeclaration": 33292,
                          "src": "376:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                            "typeString": "contract ERC6551Registry"
                          }
                        }
                      },
                      "id": 33500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "372:21:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                        "typeString": "contract ERC6551Registry"
                      }
                    },
                    "src": "361:32:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                      "typeString": "contract ERC6551Registry"
                    }
                  },
                  "id": 33502,
                  "nodeType": "ExpressionStatement",
                  "src": "361:32:37"
                },
                {
                  "expression": {
                    "id": 33508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33503,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33493,
                      "src": "403:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                        "typeString": "contract MockERC6551Account"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "420:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC6551Account_$33780_$",
                          "typeString": "function () returns (contract MockERC6551Account)"
                        },
                        "typeName": {
                          "id": 33505,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33504,
                            "name": "MockERC6551Account",
                            "nameLocations": [
                              "424:18:37"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33780,
                            "src": "424:18:37"
                          },
                          "referencedDeclaration": 33780,
                          "src": "424:18:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                            "typeString": "contract MockERC6551Account"
                          }
                        }
                      },
                      "id": 33507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "420:24:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                        "typeString": "contract MockERC6551Account"
                      }
                    },
                    "src": "403:41:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                      "typeString": "contract MockERC6551Account"
                    }
                  },
                  "id": 33509,
                  "nodeType": "ExpressionStatement",
                  "src": "403:41:37"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "336:5:37",
            "parameters": {
              "id": 33494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:2:37"
            },
            "returnParameters": {
              "id": 33495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:0:37"
            },
            "scope": 33648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33647,
            "nodeType": "FunctionDefinition",
            "src": "457:1418:37",
            "nodes": [],
            "body": {
              "id": 33646,
              "nodeType": "Block",
              "src": "486:1389:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33515,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "504:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "496:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33514,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "496:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33517,
                  "initialValue": {
                    "hexValue": "313030",
                    "id": 33516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "514:3:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "496:21:37"
                },
                {
                  "assignments": [
                    33519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33519,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "535:12:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "527:20:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33518,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "527:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33524,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "323030",
                        "id": 33522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "558:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "id": 33521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "550:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 33520,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "550:7:37",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 33523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "550:12:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "527:35:37"
                },
                {
                  "assignments": [
                    33526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33526,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "580:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "572:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33525,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "572:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33528,
                  "initialValue": {
                    "hexValue": "333030",
                    "id": 33527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "590:3:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_300_by_1",
                      "typeString": "int_const 300"
                    },
                    "value": "300"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "572:21:37"
                },
                {
                  "assignments": [
                    33530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33530,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "611:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "603:12:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33529,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "603:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33532,
                  "initialValue": {
                    "hexValue": "343030",
                    "id": 33531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "618:3:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_400_by_1",
                      "typeString": "int_const 400"
                    },
                    "value": "400"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "603:18:37"
                },
                {
                  "assignments": [
                    33534
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33534,
                      "mutability": "mutable",
                      "name": "deployedAccount",
                      "nameLocation": "639:15:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "631:23:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33533,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "631:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33535,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "631:23:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "496e697469616c697a6174696f6e4661696c65642829",
                                    "id": 33544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "734:24:37",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_19b991a8b4e4b118c8786f45ab5aad90f4356f0da0984fa0cc1cd5c381581784",
                                      "typeString": "literal_string \"InitializationFailed()\""
                                    },
                                    "value": "InitializationFailed()"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_19b991a8b4e4b118c8786f45ab5aad90f4356f0da0984fa0cc1cd5c381581784",
                                      "typeString": "literal_string \"InitializationFailed()\""
                                    }
                                  ],
                                  "id": 33543,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "724:9:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 33545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "724:35:37",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 33542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "717:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 33541,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "717:6:37",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "717:43:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 33539,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "694:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "698:18:37",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "694:22:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 33547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "694:67:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 33536,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "665:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12670",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "668:12:37",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12370,
                      "src": "665:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:106:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33549,
                  "nodeType": "ExpressionStatement",
                  "src": "665:106:37"
                },
                {
                  "expression": {
                    "id": 33567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33550,
                      "name": "deployedAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33534,
                      "src": "781:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33555,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33493,
                              "src": "843:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                                "typeString": "contract MockERC6551Account"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                                "typeString": "contract MockERC6551Account"
                              }
                            ],
                            "id": 33554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "835:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33553,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "835:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "835:23:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 33557,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33515,
                          "src": "872:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 33558,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33519,
                          "src": "893:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 33559,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33526,
                          "src": "919:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 33560,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33530,
                          "src": "940:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "696e697469616c697a6528626f6f6c29",
                              "id": 33563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "982:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d53a822f69cb9c5181e73e1d171a2fc455d295e8c34df6505716f1de11238585",
                                "typeString": "literal_string \"initialize(bool)\""
                              },
                              "value": "initialize(bool)"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 33564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1002:5:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d53a822f69cb9c5181e73e1d171a2fc455d295e8c34df6505716f1de11238585",
                                "typeString": "literal_string \"initialize(bool)\""
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 33561,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "958:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 33562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "962:19:37",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "958:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 33565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "958:50:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 33551,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33490,
                          "src": "799:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                            "typeString": "contract ERC6551Registry"
                          }
                        },
                        "id": 33552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "808:13:37",
                        "memberName": "createAccount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33253,
                        "src": "799:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (address,uint256,address,uint256,uint256,bytes memory) external returns (address)"
                        }
                      },
                      "id": 33566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:219:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "781:237:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33568,
                  "nodeType": "ExpressionStatement",
                  "src": "781:237:37"
                },
                {
                  "expression": {
                    "id": 33586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33569,
                      "name": "deployedAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33534,
                      "src": "1029:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33574,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33493,
                              "src": "1091:14:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                                "typeString": "contract MockERC6551Account"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                                "typeString": "contract MockERC6551Account"
                              }
                            ],
                            "id": 33573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1083:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33572,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1083:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1083:23:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 33576,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33515,
                          "src": "1120:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 33577,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33519,
                          "src": "1141:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 33578,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33526,
                          "src": "1167:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 33579,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33530,
                          "src": "1188:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "696e697469616c697a6528626f6f6c29",
                              "id": 33582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1230:18:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d53a822f69cb9c5181e73e1d171a2fc455d295e8c34df6505716f1de11238585",
                                "typeString": "literal_string \"initialize(bool)\""
                              },
                              "value": "initialize(bool)"
                            },
                            {
                              "hexValue": "74727565",
                              "id": 33583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1250:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d53a822f69cb9c5181e73e1d171a2fc455d295e8c34df6505716f1de11238585",
                                "typeString": "literal_string \"initialize(bool)\""
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 33580,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1206:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 33581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1210:19:37",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "1206:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 33584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1206:49:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 33570,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33490,
                          "src": "1047:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC6551Registry_$33292",
                            "typeString": "contract ERC6551Registry"
                          }
                        },
                        "id": 33571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1056:13:37",
                        "memberName": "createAccount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33253,
                        "src": "1047:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (address,uint256,address,uint256,uint256,bytes memory) external returns (address)"
                        }
                      },
                      "id": 33585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1047:218:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1029:236:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33587,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:236:37"
                },
                {
                  "assignments": [
                    33590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33590,
                      "mutability": "mutable",
                      "name": "accountInstance",
                      "nameLocation": "1295:15:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "1276:34:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                        "typeString": "contract MockERC6551Account"
                      },
                      "typeName": {
                        "id": 33589,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33588,
                          "name": "MockERC6551Account",
                          "nameLocations": [
                            "1276:18:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33780,
                          "src": "1276:18:37"
                        },
                        "referencedDeclaration": 33780,
                        "src": "1276:18:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                          "typeString": "contract MockERC6551Account"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33597,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33594,
                            "name": "deployedAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33534,
                            "src": "1353:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1345:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 33592,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1345:8:37",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1345:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33591,
                      "name": "MockERC6551Account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33780,
                      "src": "1313:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MockERC6551Account_$33780_$",
                        "typeString": "type(contract MockERC6551Account)"
                      }
                    },
                    "id": 33596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:66:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                      "typeString": "contract MockERC6551Account"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1276:103:37"
                },
                {
                  "assignments": [
                    33599,
                    33601,
                    33603
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33599,
                      "mutability": "mutable",
                      "name": "chainId_",
                      "nameLocation": "1412:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "1404:16:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1404:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33601,
                      "mutability": "mutable",
                      "name": "tokenAddress_",
                      "nameLocation": "1442:13:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "1434:21:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33600,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1434:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 33603,
                      "mutability": "mutable",
                      "name": "tokenId_",
                      "nameLocation": "1477:8:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "1469:16:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33602,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1469:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33607,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33604,
                        "name": "accountInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33590,
                        "src": "1498:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                          "typeString": "contract MockERC6551Account"
                        }
                      },
                      "id": 33605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1514:5:37",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33743,
                      "src": "1498:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_address_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,address,uint256)"
                      }
                    },
                    "id": 33606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:23:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(uint256,address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1390:131:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33609,
                        "name": "chainId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33599,
                        "src": "1540:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33610,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33515,
                        "src": "1550:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33608,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1531:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:27:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33612,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:27:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33614,
                        "name": "tokenAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33601,
                        "src": "1577:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33615,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33519,
                        "src": "1592:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33613,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "1568:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33617,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:37:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33619,
                        "name": "tokenId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33603,
                        "src": "1624:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33620,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33526,
                        "src": "1634:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33618,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1615:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:27:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33622,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:27:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33624,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33530,
                        "src": "1662:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33625,
                            "name": "accountInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33590,
                            "src": "1668:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                              "typeString": "contract MockERC6551Account"
                            }
                          },
                          "id": 33626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1684:4:37",
                          "memberName": "salt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33753,
                          "src": "1668:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 33627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1668:22:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33623,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 514,
                      "src": "1653:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1653:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33629,
                  "nodeType": "ExpressionStatement",
                  "src": "1653:38:37"
                },
                {
                  "assignments": [
                    33631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33631,
                      "mutability": "mutable",
                      "name": "accountImplementation",
                      "nameLocation": "1710:21:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33646,
                      "src": "1702:29:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33630,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33637,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 33633,
                            "name": "deployedAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33534,
                            "src": "1755:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33632,
                          "name": "IERC6551AccountProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33300,
                          "src": "1734:20:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC6551AccountProxy_$33300_$",
                            "typeString": "type(contract IERC6551AccountProxy)"
                          }
                        },
                        "id": 33634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1734:37:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC6551AccountProxy_$33300",
                          "typeString": "contract IERC6551AccountProxy"
                        }
                      },
                      "id": 33635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1785:14:37",
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33299,
                      "src": "1734:65:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1734:67:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:99:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33639,
                        "name": "accountImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33631,
                        "src": "1821:21:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33642,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33493,
                            "src": "1852:14:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                              "typeString": "contract MockERC6551Account"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC6551Account_$33780",
                              "typeString": "contract MockERC6551Account"
                            }
                          ],
                          "id": 33641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1844:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1844:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1844:23:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33638,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2482,
                        2507,
                        2520,
                        2536,
                        2578,
                        2620,
                        2662,
                        2699,
                        2736,
                        2773,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        2012,
                        2047
                      ],
                      "referencedDeclaration": 320,
                      "src": "1812:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1812:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33645,
                  "nodeType": "ExpressionStatement",
                  "src": "1812:56:37"
                }
              ]
            },
            "functionSelector": "354b2735",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeploy",
            "nameLocation": "466:10:37",
            "parameters": {
              "id": 33512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:2:37"
            },
            "returnParameters": {
              "id": 33513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:37"
            },
            "scope": 33648,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33486,
              "name": "Test",
              "nameLocations": [
                "232:4:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11311,
              "src": "232:4:37"
            },
            "id": 33487,
            "nodeType": "InheritanceSpecifier",
            "src": "232:4:37"
          }
        ],
        "canonicalName": "RegistryTest",
        "contractDependencies": [
          33292,
          33780
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33648,
          11311,
          2351,
          2348,
          11262,
          7041,
          6751,
          6072,
          4475,
          3781,
          2291
        ],
        "name": "RegistryTest",
        "nameLocation": "216:12:37",
        "scope": 33649,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 37
}